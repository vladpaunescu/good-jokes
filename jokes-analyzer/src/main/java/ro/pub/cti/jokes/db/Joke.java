package ro.pub.cti.jokes.db;
// Generated Apr 11, 2014 12:08:35 AM by Hibernate Tools 3.6.0


import java.util.HashSet;
import java.util.Objects;
import java.util.Set;

/**
 * Joke generated by hbm2java
 */
public class Joke  implements java.io.Serializable {


     private Integer id;
     private String title;
     private String content;
     private Float rating;
     private Integer votes;
     private Integer likes;
     private String url;
     private Integer commentsCount;
     private Set jokeCategories = new HashSet(0);
     private Set comments = new HashSet(0);

    public Joke() {
    }

    public Joke(String title, String content, Float rating, Integer votes, Integer likes, String url, Integer commentsCount, Set jokeCategories, Set comments) {
       this.title = title;
       this.content = content;
       this.rating = rating;
       this.votes = votes;
       this.likes = likes;
       this.url = url;
       this.commentsCount = commentsCount;
       this.jokeCategories = jokeCategories;
       this.comments = comments;
    }
   
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }
    public String getTitle() {
        return this.title;
    }
    
    public void setTitle(String title) {
        this.title = title;
    }
    public String getContent() {
        return this.content;
    }
    
    public void setContent(String content) {
        this.content = content;
    }
    public Float getRating() {
        return this.rating;
    }
    
    public void setRating(Float rating) {
        this.rating = rating;
    }
    public Integer getVotes() {
        return this.votes;
    }
    
    public void setVotes(Integer votes) {
        this.votes = votes;
    }
    public Integer getLikes() {
        return this.likes;
    }
    
    public void setLikes(Integer likes) {
        this.likes = likes;
    }
    public String getUrl() {
        return this.url;
    }
    
    public void setUrl(String url) {
        this.url = url;
    }
    public Integer getCommentsCount() {
        return this.commentsCount;
    }
    
    public void setCommentsCount(Integer commentsCount) {
        this.commentsCount = commentsCount;
    }
    public Set getJokeCategories() {
        return this.jokeCategories;
    }
    
    public void setJokeCategories(Set jokeCategories) {
        this.jokeCategories = jokeCategories;
    }
    public Set getComments() {
        return this.comments;
    }
    
    public void setComments(Set comments) {
        this.comments = comments;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 23 * hash + Objects.hashCode(this.id);
        hash = 23 * hash + Objects.hashCode(this.title);
        hash = 23 * hash + Objects.hashCode(this.content);
        hash = 23 * hash + Objects.hashCode(this.rating);
        hash = 23 * hash + Objects.hashCode(this.votes);
        hash = 23 * hash + Objects.hashCode(this.likes);
        hash = 23 * hash + Objects.hashCode(this.url);
        hash = 23 * hash + Objects.hashCode(this.commentsCount);
        hash = 23 * hash + Objects.hashCode(this.jokeCategories);
        hash = 23 * hash + Objects.hashCode(this.comments);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Joke other = (Joke) obj;
        if (!Objects.equals(this.id, other.id)) {
            return false;
        }
        if (!Objects.equals(this.title, other.title)) {
            return false;
        }
        if (!Objects.equals(this.content, other.content)) {
            return false;
        }
        if (!Objects.equals(this.rating, other.rating)) {
            return false;
        }
        if (!Objects.equals(this.votes, other.votes)) {
            return false;
        }
        if (!Objects.equals(this.likes, other.likes)) {
            return false;
        }
        if (!Objects.equals(this.url, other.url)) {
            return false;
        }
        if (!Objects.equals(this.commentsCount, other.commentsCount)) {
            return false;
        }
        if (!Objects.equals(this.jokeCategories, other.jokeCategories)) {
            return false;
        }
        if (!Objects.equals(this.comments, other.comments)) {
            return false;
        }
        return true;
    }




}


